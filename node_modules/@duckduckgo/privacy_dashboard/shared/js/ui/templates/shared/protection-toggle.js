import toggleButton from './toggle-button.es6'
import bel from 'bel'
const raw = require('bel/raw')
const i18n = window.DDG.base.i18n

const renderUpdatingSpinner = () => {
    return bel`<img src="../img/spinner.svg" style="height: 18px; width: 18px;" alt="${i18n.t('site:updatingProtectionList.title')}" />`
}

export function protectionToggle (model) {
    let text = i18n.t('site:protectionsEnabled.title')
    let active = true
    let note = false

    if (model.isDenylisted) {
        text = i18n.t('site:protectionsUnprotectedOverride.title')
        active = true
        note = true
    } else if (model.isAllowlisted) {
        text = i18n.t('site:protectionsOff.title')
        active = false
        note = false
    } else if (model.displayBrokenUI) {
        text = i18n.t('site:protectionsUnprotected.title')
        active = false
        note = true
    }

    const protectionToggle = model.tab.isPendingUpdates
        ? renderUpdatingSpinner()
        : toggleButton(active, 'js-site-toggle pull-right')

    if (note) {
        return bel`
        <div class="list-wrapper" data-test-id="protection-toggle">
            <div class="note note--with-toggle">
                <p>${raw(text)}</p>
                <div class="note__toggle">
                    ${protectionToggle}
                </div>
            </div>
        </div>`
    }

    return bel`<div class="list-wrapper site-info__protection-wrapper" data-test-id="protection-toggle">
        <ul class="default-list">
            <li class="site-info__li--toggle ${active ? 'is-active' : ''}"> 
                <p class="site-info__protection js-site-protection"><span>${raw(text)}</span></p>
                <div class="site-info__toggle-container">${protectionToggle}</div>
            </li>
        </ul>
    </div>`
}
