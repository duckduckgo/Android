import { setupColorScheme, setupMutationObserver } from './common.es6'

// This is am example interface purely for previewing the panel
const generateData = require('../ui/views/tests/mock-data/generate-data')

// eslint-disable-next-line no-unused-vars
const setColorScheme = setupColorScheme()
// setTimeout(() => setColorScheme('dark'), 5000)

let channel = null

let isSecure = true
let isPendingUpdates = false
const siteOverrides = {
    allowlisted: false
}

// Modify state after render
// eslint-disable-next-line no-unused-vars
const tweakSecureStatus = () => {
    isSecure = false
    channel?.send('updateTabData')
}
// setTimeout(() => tweakSecureStatus(), 10000)

// Suport previewing different environments
const [environmentOverride, themeOverride] = window.location.hash.substring(1).split('-')
if (environmentOverride) {
    document.body.classList.remove('environment--example')
    document.body.classList.add(`environment--${environmentOverride.toLowerCase()}`)
    window.environmentOverride = environmentOverride
}

// Suport previewing different themes
if (themeOverride) {
    if (themeOverride.toLowerCase() === 'dark') {
        document.body.classList.add('body--theme-dark')
    } else {
        document.body.classList.remove('body--theme-dark')
    }
}

export function fetch (...args) {
    if (args[0].toggleAllowlist) {
        console.log('fetch - Updating in memory overrides', args)
        isPendingUpdates = true
        channel?.send('updateTabData')
        setTimeout(() => {
            isPendingUpdates = false
            siteOverrides.allowlisted = !args[0].toggleAllowlist.value
            channel?.send('updateTabData')
        }, 2000)
        return
    }

    console.log('fetch - Not implemented', args)
}

export function backgroundMessage (backgroundModel) {
    console.log('backgroundMessage - setting local channel')
    channel = backgroundModel
}

const consentManaged = {
    consentManaged: true,
    optoutFailed: false,
    selftestFailed: false
}

export async function getBackgroundTabData () {
    const data = generateData({ isSecure, isPendingUpdates, consentManaged, site: siteOverrides })
    console.log('getBackgroundTabData', data)
    return data
}

setupMutationObserver((height) => {
    console.log('Window height change:', height)
})
