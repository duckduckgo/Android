/**
 * The purpose of this function is to allow URL parameters to override
 * test data when viewing the 'example' build.
 *
 * Eg: after running 'npm run preview.example', you could then set the theme
 * by providing '?theme=dark' as a url parameter
 *
 * See the 'Emulating different platforms/scenarios' section in the README.md file
 */
export function getOverrides (searchString) {
    const overrides = {
        tab: {
            site: {
                isBroken: undefined,
                allowlisted: undefined,
                denylisted: undefined,
                specialDomainName: undefined,
                enabledFeatures: ['contentBlocking']
            },
            consentManaged: {
                consentManaged: true,
                optoutFailed: false,
                selftestFailed: false
            }
        },
        emailProtectionUserData: undefined,
        platform: 'example',
        theme: undefined
    }

    const params = new URLSearchParams(searchString)

    if (params.has('platform')) {
        overrides.platform = params.get('platform')
        document.body.classList.remove('environment--example')
        document.body.classList.add(`environment--${overrides.platform}`)
        window.environmentOverride = overrides.platform
    }

    // emulate a different theme
    if (params.has('theme')) {
        overrides.theme = params.get('theme')
        if (overrides.theme.toLowerCase() === 'dark') {
            document.body.classList.add('body--theme-dark')
        } else {
            document.body.classList.remove('body--theme-dark')
        }
    }

    // override known keys for 'tab.site'
    const siteKeys = Object.keys(overrides.tab.site)
    siteKeys.forEach(key => {
        const paramValue = params.get(key)
        if (paramValue === 'true') {
            overrides.tab.site[key] = true
        } else if (typeof paramValue === 'string' && paramValue !== '') {
            overrides.tab.site[key] = paramValue
        }
    })

    // emulate a 'contentBlockingException'
    if (params.get('contentBlockingException') === 'true') {
        overrides.tab.site.enabledFeatures = []
    }

    // browser-specific overrides
    if (overrides.platform === 'browser') {
        // supports email
        overrides.tab.emailProtection = true
        // supports search
        overrides.tab.search = true
        // supports CTA screens
        overrides.tab.ctaScreens = true
        // extensions can't do 'consentManaged' (yet)
        overrides.tab.consentManaged = false
        // extensions can't handle 'permissions'
        overrides.tab.permissions = []

        // emulate a user being signed in to email protection
        if (params.get('emailUser') === 'true') {
            overrides.emailProtectionUserData = {
                cohort: 'private_beta_dax',
                nextAlias: '123456_next',
                token: '123456',
                userName: 'daxtheduck'
            }
        }
    }

    return overrides
}
