import { generateFiles } from '../api-call-generator'
import { join } from 'path'

describe('api call generator', () => {
    it('generates files from fixtures', async () => {
        const [ts, validators, apiCalls] = await generateFiles(
            join(process.cwd(), 'scripts/tests/fixtures')
        )
        expect(ts.content).toMatchInlineSnapshot(`
      "// example.params.json

      export interface ExampleParams {
        secret: string;
      }
      "
    `)
        expect(validators.content).toMatchInlineSnapshot(`
      "// Generated by ts-to-zod
      import { z } from \\"zod\\";

      export const exampleParamsSchema = z.object({
          secret: z.string()
      });
      "
    `)
        expect(apiCalls.content).toMatchInlineSnapshot(`
      "import {
          exampleParamsSchema
      } from \\"./validators.zod.js\\"
      import { DeviceApiCall } from \\"../../../packages/device-api\\";

      /**
       * @extends {DeviceApiCall<exampleParamsSchema, any>} 
       */
      export class ExampleCall extends DeviceApiCall {
        method = \\"example\\"
        paramsValidator = exampleParamsSchema
      }"
    `)
    })
})
