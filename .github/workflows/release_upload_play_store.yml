name: Release - Production Release to Play Store and Github

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Ref to build APK from (branch, tag, commit)'
        required: true

env:
  ASANA_PAT: ${{ secrets.GH_ASANA_SECRET }}
  GH_TOKEN: ${{ secrets.GT_DAXMOBILE }}
  GOOGLE_APPLICATION_CREDENTIALS: '#{ENV["HOME"]}/jenkins_static/com.duckduckgo.mobile.android/ddg-upload-firebase.json'
  emoji_info: ":information_source:" # ℹ️

jobs:
  release-production:
    runs-on: ubuntu-latest
    name: Publish Bundle to Play Store Internal track

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GT_DAXMOBILE }}
          ref: ${{ github.event.inputs.ref }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up ruby env
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          bundler-cache: true

      - name: Set up git config
        run: |
          git remote set-url origin https://${{ secrets.GT_DAXMOBILE }}@github.com/duckduckgo/Android.git/
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Decode upload keys
        uses: davidSchuppa/base64Secret-toFile-action@199e78f212c854d2284fada7f3cd3aba3e37d208
        with:
          secret: ${{ secrets.UPLOAD_RELEASE_PROPERTIES }}
          fileName: ddg_android_build_upload.properties
          destination-path: $HOME/jenkins_static/com.duckduckgo.mobile.android/

      - name: Decode key file
        uses: davidSchuppa/base64Secret-toFile-action@199e78f212c854d2284fada7f3cd3aba3e37d208
        with:
          secret: ${{ secrets.UPLOAD_RELEASE_KEY }}
          fileName: ddg-upload-keystore.jks
          destination-path: $HOME/jenkins_static/com.duckduckgo.mobile.android/

      - name: Decode Play Store credentials file
        uses: davidSchuppa/base64Secret-toFile-action@199e78f212c854d2284fada7f3cd3aba3e37d208
        with:
          secret: ${{ secrets.UPLOAD_PLAY_CREDENTIALS }}
          fileName: api.json
          destination-path: $HOME/jenkins_static/com.duckduckgo.mobile.android/

      - name: Assemble the bundle
        run: ./gradlew bundleRelease -PuseUploadSigning -Pbuild-date-time

      - name: Capture App Bundle Path
        id: capture_output
        run: |
          output=$(find app/build/outputs/bundle/playRelease -name "*.aab")
          echo "bundle_path=$output" >> $GITHUB_OUTPUT

      - name: Upload bundle to Play Store
        id: upload_bundle_play
        run: |
          bundle exec fastlane deploy_playstore

      - name: Notify Mattermost of Play Store upload
        id: send-mm-message-ps-upload
        uses: duckduckgo/native-github-asana-sync@v1.5
        with:
          mattermost-token: ${{ secrets.MM_AUTH_TOKEN }}
          mattermost-team-id: ${{ secrets.MM_TEAM_ID }}
          mattermost-channel-name: ${{ vars.MM_RELEASE_NOTIFY_CHANNEL }}
          mattermost-message: ${{env.emoji_start}} Release ${{ github.event.inputs.app-version }}. AAB uploaded to Play Store. See https://play.google.com/console/u/0/developers/5949020878215944484/app/4974643806384870294/releases/overview
          action: 'send-mattermost-message'

      - name: Upload Universal APK to Github
        id: upload_bundle_github
        run: |
          bundle exec fastlane deploy_github

      - name: Notify Mattermost of GH upload
        id: send-mm-message-gh-upload
        uses: duckduckgo/native-github-asana-sync@v1.5
        with:
          mattermost-token: ${{ secrets.MM_AUTH_TOKEN }}
          mattermost-team-id: ${{ secrets.MM_TEAM_ID }}
          mattermost-channel-name: ${{ vars.MM_RELEASE_NOTIFY_CHANNEL }}
          mattermost-message: ${{env.emoji_start}} Release ${{ github.event.inputs.app-version }}. Universal APK uploaded to Github. See https://github.com/duckduckgo/Android/releases
          action: 'send-mattermost-message'

      - name: Create Asana task when workflow failed
        if: ${{ failure() }}
        uses: duckduckgo/native-github-asana-sync@v1.1
        with:
          asana-pat: ${{ secrets.GH_ASANA_SECRET }}
          asana-project: ${{ vars.GH_ANDROID_APP_PROJECT_ID }}
          asana-section: ${{ vars.GH_ANDROID_APP_INCOMING_SECTION_ID }}
          asana-task-name: GH Workflow Failure - Production Release
          asana-task-description: The Production Release to Play Store and Github workflow has failed. See https://github.com/duckduckgo/Android/actions/runs/${{ github.run_id }}
          action: 'create-asana-task'

      - name: Notify Mattermost when workflow failed
        if: ${{ failure() }}
        id: send-mm-message-error
        uses: duckduckgo/native-github-asana-sync@v1.5
        with:
          mattermost-token: ${{ secrets.MM_AUTH_TOKEN }}
          mattermost-team-id: ${{ secrets.MM_TEAM_ID }}
          mattermost-channel-name: ${{ vars.MM_RELEASE_NOTIFY_CHANNEL }}
          asana-task-description: The Production Release to Play Store and Github workflow has failed. See https://github.com/duckduckgo/Android/actions/runs/${{ github.run_id }}
          action: 'send-mattermost-message'