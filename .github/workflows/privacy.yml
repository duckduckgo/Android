name: Privacy Tests

on:
  pull_request:
    types: [ labeled ]
  schedule:
    - cron: '0 3 * * *' # run at 3 AM UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  privacy_tests:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'content scope scripts') || github.event.schedule == '0 3 * * *' || github.event_name == 'workflow_dispatch' }}
    name: Privacy Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup jq
        uses: dcarbone/install-jq-action@v1.0.1
        with:
          force: true

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'

      - name: Decode secret
        env:
          FLANK: ${{ secrets.FLANK }}
        run: echo $FLANK > flank.json

      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: androidTestsBuild

      - name: Run Android Tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: runFlankPrivacyTests

      - name: Bundle the Android CI tests report
        if: always()
        run: find . -type d -name 'fladleResults' | zip -@ -r android-tests-report.zip

      - name: Generate json file with failures
        if: ${{ failure() }}
        run: cat build/fladle/fladleResults/HtmlErrorReport.html | cut -d\`  -f2 >> results.json

      - name: Print failure report
        if: ${{ failure() }}
        run: |
          jq -r '.[] | .label as $id | .items[] | "Test:", $id, "Failure:", .label, "URL:", .url, "\n"' results.json

      - name: Upload the Android CI tests report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: android-tests-report
          path: android-tests-report.zip

      - name: Create Asana task when workflow failed
        if: ${{ failure() && github.event_name != 'workflow_dispatch' }}
        uses: honeycombio/gha-create-asana-task@main
        with:
          asana-secret: ${{ secrets.GH_ASANA_SECRET }}
          asana-workspace-id: ${{ secrets.GH_ASANA_WORKSPACE_ID }}
          asana-project-id: ${{ secrets.GH_ASANA_AOR_PROJECT_ID }}
          asana-section-id: ${{ secrets.GH_ASANA_INCOMING_ID }}
          asana-task-name: GH Workflow Failure - Privacy tests
          asana-task-description: The privacy workflow has failed. See https://github.com/duckduckgo/Android/actions/runs/${{ github.run_id }}
