name: Nightly

on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code_formatting:
    name: Code Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Run Code Formatting Checks
        uses: gradle/gradle-build-action@v2
        with:
          arguments: code_format_checks

  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: JVM tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jvm_tests

      - name: Bundle the JVM checks report
        run: find . -type d -name 'reports' | zip -@ -r unit-tests-report.zip

      - name: Upload the JVM checks report
        uses: actions/upload-artifact@v3
        with:
          name: unit-tests-report
          path: unit-tests-report.zip

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Lint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: lint

      - name: Bundle the lint report
        if: always()
        run: find . -name lint-results\* | zip -@ -r lint-report.zip

      - name: Upload the JVM lint report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: lint-report
          path: lint-report.zip

  android_tests:
    runs-on: ubuntu-latest
    name: Android CI checks

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Decode secret
        env:
          FLANK: ${{ secrets.FLANK }}
        run: echo $FLANK > flank.json

      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: androidTestsBuild

      - name: Run Android Tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: runFlankAndroidTests

      - name: Bundle the Android CI tests report
        run: find . -type d -name 'fladleResults' | zip -@ -r android-tests-report.zip

      - name: Upload the Android CI tests report
        uses: actions/upload-artifact@v3
        with:
          name: android-tests-report
          path: android-tests-report.zip

  create_task_when_failed:
    name: Create Asana task when workflow failed
    runs-on: ubuntu-latest
    needs: [code_formatting, unit_tests, lint, android_tests]
    if: ${{ failure() }}
    steps:
      - name: Create Asana task when workflow failed
        uses: honeycombio/gha-create-asana-task@main
        with:
          asana-secret: ${{ secrets.GH_ASANA_SECRET }}
          asana-workspace-id: ${{ secrets.GH_ASANA_WORKSPACE_ID }}
          asana-project-id: ${{ secrets.GH_ASANA_AOR_PROJECT_ID }}
          asana-section-id: ${{ secrets.GH_ASANA_INCOMING_ID }}
          asana-task-name: GH Workflow Failure - Nightly
          asana-task-description: The nightly workflow has failed. See https://github.com/duckduckgo/Android/actions/runs/${{ github.run_id }}