name: Test - Workflow for Testing

on:
  workflow_dispatch:

    inputs:
      ref:
        description: 'This is an example of an input'
        required: true

env:
  ASANA_PAT: ${{ secrets.ASANA_ACCESS_TOKEN }}
  GH_TOKEN: ${{ secrets.GT_DAXMOBILE }}

jobs:
  test-workflow:
    runs-on: ubuntu-latest
    name: Add here whatever steps you want to test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GT_DAXMOBILE }}
          ref: ${{ github.event.inputs.ref }}

      - name: Assign task to Github Actor
        id: assign_release_task
        uses: ./.github/actions/assign-release-task
        with:
          task_name: 'Android Release 5.238.0 - 5%'
          asana_token: ${{ secrets.ASANA_ACCESS_TOKEN }}
          project_gid: ${{ vars.GH_ANDROID_RELEASE_BOARD_PROJECT_ID }}
          username: ${{ github.actor }}

      - name: Read Task ID from file and set as output
        id: read_task_output_step
        run: |
          OUTPUT_FILE="${{ github.workspace }}/asana_task_id.txt"
          echo "Attempting to read Task ID from file: $OUTPUT_FILE"
          if [ -f "$OUTPUT_FILE" ]; then
            TASK_ID_VALUE=$(cat "$OUTPUT_FILE")
            echo "Raw content from file: '$TASK_ID_VALUE'"
            # Check for error markers
            if [[ "$TASK_ID_VALUE" == "TASK_NOT_FOUND" || "$TASK_ID_VALUE" == "USER_MAPPING_FILE_NOT_FOUND" || "$TASK_ID_VALUE" == "USER_NOT_IN_MAPPING" ]]; then
              echo "::error::Error marker found in output file: $TASK_ID_VALUE"
              echo "task_id=" >> $GITHUB_OUTPUT # Set actual output to empty on error
            else
              echo "Successfully read Task ID: '$TASK_ID_VALUE'"
              echo "task_id=$TASK_ID_VALUE" >> $GITHUB_OUTPUT
            fi
          else
            echo "::error::Output file $OUTPUT_FILE not found!"
            echo "task_id=" >> $GITHUB_OUTPUT # Set actual output to empty if file not found
          fi

      - name: Use the Task ID read from file
        run: |
          echo "Task ID obtained via file method: ${{ steps.read_task_output_step.outputs.task_id }}"
          if [ -z "${{ steps.read_task_output_step.outputs.task_id }}" ]; then
            echo "Task ID is still empty after reading from file."
          else
            echo "Hooray! Task ID is: ${{ steps.read_task_output_step.outputs.task_id }}"
          fi
          
          echo "--- All available outputs for the step 'read_task_output_step' ---"
          echo '${{ toJson(steps.read_task_output_step.outputs) }}'
          echo "-----------------------------------------------------------------"

      - name: Get Asana Task Permalink
        id: get-task-permalink
        uses: duckduckgo/native-github-asana-sync@v1.8
        with:
          asana-pat: ${{ secrets.ASANA_ACCESS_TOKEN }}
          asana-task-id: ${{ steps.read_task_output_step.outputs.task_id }}
          action: 'get-asana-task-permalink'