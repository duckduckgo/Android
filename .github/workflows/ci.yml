name: CI Checks

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - '**.md'
      - '.github/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - '.github/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code_formatting:
    name: Code Formatting
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run Code Formatting Checks
        run: ./gradlew code_format_checks

  unit_tests:
    name: Unit tests
    runs-on: android-large-runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: JVM tests
        run: ./gradlew jvm_tests

      - name: Bundle the JVM checks report
        if: always()
        run: find . -type d -name 'reports' | zip -@ -r unit-tests-report.zip

      - name: Upload the JVM checks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-report
          path: unit-tests-report.zip

  lint:
    name: Lint
    runs-on: android-large-runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.18.3'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Lint
        run: ./gradlew lint

      - name: Bundle the lint report
        if: always()
        run: find . -name lint-results\* | zip -@ -r lint-report.zip

      - name: Upload the JVM lint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint-report.zip

  android_tests:
    runs-on: android-large-runner
    name: Android CI tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup jq
        uses: dcarbone/install-jq-action@v1.0.1
        with:
          force: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.18.3'

      - name: Decode secret
        env:
          FLANK: ${{ secrets.FLANK }}
        run: echo $FLANK > flank.json

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build
        run: ./gradlew androidTestsBuild

      - name: Run Android Tests
        run: ./gradlew runFlankAndroidTests

      - name: Bundle the Android CI tests report
        if: always()
        run: find . -type d -name 'fladleResults' | zip -@ -r android-tests-report.zip

      - name: Generate json file with failures
        if: ${{ failure() }}
        run: cat build/fladle/fladleResults/HtmlErrorReport.html | cut -d\`  -f2 >> results.json

      - name: Print failure report
        if: ${{ failure() }}
        run: |
          jq -r '.[] | .label as $id | .items[] | "Test:", $id, "Failure:", .label, "URL:", .url, "\n"' results.json

      - name: Upload the Android CI tests report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-tests-report
          path: android-tests-report.zip