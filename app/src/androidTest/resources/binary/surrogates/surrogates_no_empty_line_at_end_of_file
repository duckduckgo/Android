# To neutralize GA scripts. The goal is to provide the minimal API
# expected by clients of these scripts so that the end users are able
# to wholly block GA while minimizing risks of page breakage.
# Test cases (need way more):
# - https://github.com/chrisaljoudi/uBlock/issues/119
# Reference API:
# - https://developers.google.com/analytics/devguides/collection/gajs/
google-analytics.com/ga.js application/javascript
(function() {
	var noopfn = function() {
		;
	};
	//
	var Gaq = function() {
		;
	};
	Gaq.prototype.Na = noopfn;
	Gaq.prototype.O = noopfn;
	Gaq.prototype.Sa = noopfn;
	Gaq.prototype.Ta = noopfn;
	Gaq.prototype.Va = noopfn;
	Gaq.prototype._createAsyncTracker = noopfn;
	Gaq.prototype._getAsyncTracker = noopfn;
	Gaq.prototype._getPlugin = noopfn;
	Gaq.prototype.push = function(a) {
		if ( typeof a === 'function' ) {
			a(); return;
		}
		if ( Array.isArray(a) === false ) {
			return;
		}
		// https://twitter.com/catovitch/status/776442930345218048
		// https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiDomainDirectory#_gat.GA_Tracker_._link
		if ( a[0] === '_link' && typeof a[1] === 'string' ) {
			window.location.assign(a[1]);
		}
		// https://github.com/gorhill/uBlock/issues/2162
		if ( a[0] === '_set' && a[1] === 'hitCallback' && typeof a[2] === 'function' ) {
			a[2]();
		}
	};
	//
	var tracker = (function() {
		var out = {};
		var api = [
			'_addIgnoredOrganic _addIgnoredRef _addItem _addOrganic',
			'_addTrans _clearIgnoredOrganic _clearIgnoredRef _clearOrganic',
			'_cookiePathCopy _deleteCustomVar _getName _setAccount',
			'_getAccount _getClientInfo _getDetectFlash _getDetectTitle',
			'_getLinkerUrl _getLocalGifPath _getServiceMode _getVersion',
			'_getVisitorCustomVar _initData _link _linkByPost',
			'_setAllowAnchor _setAllowHash _setAllowLinker _setCampContentKey',
			'_setCampMediumKey _setCampNameKey _setCampNOKey _setCampSourceKey',
			'_setCampTermKey _setCampaignCookieTimeout _setCampaignTrack _setClientInfo',
			'_setCookiePath _setCookiePersistence _setCookieTimeout _setCustomVar',
			'_setDetectFlash _setDetectTitle _setDomainName _setLocalGifPath',
			'_setLocalRemoteServerMode _setLocalServerMode _setReferrerOverride _setRemoteServerMode',
			'_setSampleRate _setSessionTimeout _setSiteSpeedSampleRate _setSessionCookieTimeout',
			'_setVar _setVisitorCookieTimeout _trackEvent _trackPageLoadTime',
			'_trackPageview _trackSocial _trackTiming _trackTrans',
			'_visitCode'
		].join(' ').split(/\s+/);
		var i = api.length;
		while ( i-- ) {
			out[api[i]] = noopfn;
		}
		out._getLinkerUrl = function(a) {
			return a;
		};
		return out;
	})();
	//
	var Gat = function() {
		;
	};
	Gat.prototype._anonymizeIP = noopfn;
	Gat.prototype._createTracker = noopfn;
	Gat.prototype._forceSSL = noopfn;
	Gat.prototype._getPlugin = noopfn;
	Gat.prototype._getTracker = function() {
		return tracker;
	};
	Gat.prototype._getTrackerByName = function() {
		return tracker;
	};
	Gat.prototype._getTrackers = noopfn;
	Gat.prototype.aa = noopfn;
	Gat.prototype.ab = noopfn;
	Gat.prototype.hb = noopfn;
	Gat.prototype.la = noopfn;
	Gat.prototype.oa = noopfn;
	Gat.prototype.pa = noopfn;
	Gat.prototype.u = noopfn;
	var gat = new Gat();
	window._gat = gat;
	//
	var gaq = new Gaq();
	(function() {
		var aa = window._gaq || [];
		if ( Array.isArray(aa) ) {
			while ( aa[0] ) {
				gaq.push(aa.shift());
			}
		}
	})();
	window._gaq = gaq.qf = gaq;
})();

google-analytics.com/analytics.js application/javascript
(function() {
	// https://developers.google.com/analytics/devguides/collection/analyticsjs/
	var noopfn = function() {
		;
	};
	var noopnullfn = function() {
		return null;
	};
	//
	var Tracker = function() {
		;
	};
	var p = Tracker.prototype;
	p.get = noopfn;
	p.set = noopfn;
	p.send = noopfn;
	//
	var w = window,
		gaName = w.GoogleAnalyticsObject || 'ga';
	var ga = function() {
		var len = arguments.length;
		if ( len === 0 ) {
			return;
		}
		var f = arguments[len-1];
		if ( typeof f !== 'object' || f === null || typeof f.hitCallback !== 'function' ) {
			return;
		}
		try {
			f.hitCallback();
		} catch (ex) {
		}
	};
	ga.create = function() {
		return new Tracker();
	};
	ga.getByName = noopnullfn;
	ga.getAll = function() {
		return [];
	};
	ga.remove = noopfn;
	w[gaName] = ga;
	// https://github.com/gorhill/uBlock/issues/3075
	var dl = w.dataLayer;
	if ( dl instanceof Object && dl.hide instanceof Object && typeof dl.hide.end === 'function' ) {
		dl.hide.end();
	}
})();

google-analytics.com/inpage_linkid.js application/javascript
(function() {
	window._gaq = window._gaq || {
		push: function() {
			;
		}
	};
})();

# https://github.com/gorhill/uBlock/issues/2480
# https://developers.google.com/analytics/devguides/collection/gajs/experiments#cxjs
google-analytics.com/cx/api.js application/javascript
(function() {
	var noopfn = function() {
	};
	window.cxApi = {
		chooseVariation: function() {
			return 0;
		},
		getChosenVariation: noopfn,
		setAllowHash: noopfn,
		setChosenVariation: noopfn,
		setCookiePath: noopfn,
		setDomainName: noopfn
		};
})();

# Ubiquitous googletagservices.com: not blocked by EasyPrivacy.
# Tags are tiny bits of website code that let you measure traffic and
# visitor behavior
googletagservices.com/gpt.js application/javascript
(function() {
	var p;
	// https://developers.google.com/doubleclick-gpt/reference
	var noopfn = function() {
		;
	}.bind();
	var noopthisfn = function() {
		return this;
	};
	var noopnullfn = function() {
		return null;
	};
	var nooparrayfn = function() {
		return [];
	};
	var noopstrfn = function() {
		return '';
	};
	//
	var companionAdsService = {
		addEventListener: noopthisfn,
		enableSyncLoading: noopfn,
		setRefreshUnfilledSlots: noopfn
	};
	var contentService = {
		addEventListener: noopthisfn,
		setContent: noopfn
	};
	var PassbackSlot = function() {
		;
	};
	p = PassbackSlot.prototype;
	p.display = noopfn;
	p.get = noopnullfn;
	p.set = noopthisfn;
	p.setClickUrl = noopthisfn;
	p.setTagForChildDirectedTreatment = noopthisfn;
	p.setTargeting = noopthisfn;
	p.updateTargetingFromMap = noopthisfn;
	var pubAdsService = {
		addEventListener: noopthisfn,
		clear: noopfn,
		clearCategoryExclusions: noopthisfn,
		clearTagForChildDirectedTreatment: noopthisfn,
		clearTargeting: noopthisfn,
		collapseEmptyDivs: noopfn,
		defineOutOfPagePassback: function() { return new PassbackSlot(); },
		definePassback: function() { return new PassbackSlot(); },
		disableInitialLoad: noopfn,
		display: noopfn,
		enableAsyncRendering: noopfn,
		enableSingleRequest: noopfn,
		enableSyncRendering: noopfn,
		enableVideoAds: noopfn,
		get: noopnullfn,
		getAttributeKeys: nooparrayfn,
		getTargeting: noopfn,
		getTargetingKeys: nooparrayfn,
		getSlots: nooparrayfn,
		refresh: noopfn,
		set: noopthisfn,
		setCategoryExclusion: noopthisfn,
		setCentering: noopfn,
		setCookieOptions: noopthisfn,
		setForceSafeFrame: noopthisfn,
		setLocation: noopthisfn,
		setPublisherProvidedId: noopthisfn,
		setSafeFrameConfig: noopthisfn,
		setTagForChildDirectedTreatment: noopthisfn,
		setTargeting: noopthisfn,
		setVideoContent: noopthisfn,
		updateCorrelator: noopfn
	};
	var SizeMappingBuilder = function() {
		;
	};
	p = SizeMappingBuilder.prototype;
	p.addSize = noopthisfn;
	p.build = noopnullfn;
	var Slot = function() {
		;
	};
	p = Slot.prototype;
	p.addService = noopthisfn;
	p.clearCategoryExclusions = noopthisfn;
	p.clearTargeting = noopthisfn;
	p.defineSizeMapping = noopthisfn;
	p.get = noopnullfn;
	p.getAdUnitPath = nooparrayfn;
	p.getAttributeKeys = nooparrayfn;
	p.getCategoryExclusions = nooparrayfn;
	p.getDomId = noopstrfn;
	p.getSlotElementId = noopstrfn;
	p.getSlotId = noopthisfn;
	p.getTargeting = nooparrayfn;
	p.getTargetingKeys = nooparrayfn;
	p.set = noopthisfn;
	p.setCategoryExclusion = noopthisfn;
	p.setClickUrl = noopthisfn;
	p.setCollapseEmptyDiv = noopthisfn;
	p.setTargeting = noopthisfn;
	//
	var gpt = window.googletag || {};
	var cmd = gpt.cmd || [];
	gpt.apiReady = true;
	gpt.cmd = [];
	gpt.cmd.push = function(a) {
		try {
			a();
		} catch (ex) {
		}
		return 1;
	};
	gpt.companionAds = function() { return companionAdsService; };
	gpt.content = function() { return contentService; };
	gpt.defineOutOfPageSlot = function() { return new Slot(); };
	gpt.defineSlot = function() { return new Slot(); };
	gpt.destroySlots = noopfn;
	gpt.disablePublisherConsole = noopfn;
	gpt.display = noopfn;
	gpt.enableServices = noopfn;
	gpt.getVersion = noopstrfn;
	gpt.pubads = function() { return pubAdsService; };
	gpt.pubadsReady = true;
	gpt.setAdIframeTitle = noopfn;
	gpt.sizeMapping = function() { return new SizeMappingBuilder(); };
	window.googletag = gpt;
	while ( cmd.length !== 0 ) {
		gpt.cmd.push(cmd.shift());
	}
})();

# Obviously more work needs to be done, but at least for now it takes care of:
# See related filter in assets/ublock/privacy.txt
# Also:
# - https://github.com/gorhill/uBlock/issues/2569
# - https://github.com/uBlockOrigin/uAssets/issues/420
googletagmanager.com/gtm.js application/javascript
(function() {
	var noopfn = function() {
	};
	var w = window;
	w.ga = w.ga || noopfn;
	var dl = w.dataLayer;
	if ( dl instanceof Object === false ) { return; }
	if ( dl.hide instanceof Object && typeof dl.hide.end === 'function' ) {
		dl.hide.end();
	}
	if ( typeof dl.push === 'function' ) {
		dl.push = function(o) {
			if (
				o instanceof Object &&
				typeof o.eventCallback === 'function'
			) {
				setTimeout(o.eventCallback, 1);
			}
		};
	}
})();