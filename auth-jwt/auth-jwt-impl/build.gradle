/*
 * Copyright (c) 2021 DuckDuckGo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.squareup.anvil'
    id 'com.google.devtools.ksp'
}

apply from: "$rootProject.projectDir/gradle/android-library.gradle"

dependencies {
    implementation project(":auth-jwt-api")

    anvil project(path: ':anvil-compiler')
    implementation project(path: ':anvil-annotations')
    implementation project(path: ':di')
    implementation project(path: ':common-utils')

    implementation Google.dagger

    implementation "com.squareup.logcat:logcat:_"

    implementation "io.jsonwebtoken:jjwt-api:_"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:_"
    runtimeOnly("io.jsonwebtoken:jjwt-orgjson:_") {
        exclude(group: 'org.json', module: 'json') // provided by Android natively
    }

    testImplementation Testing.junit4
    testImplementation "org.mockito.kotlin:mockito-kotlin:_"
    testImplementation Testing.robolectric
    testImplementation AndroidX.test.ext.junit
    testImplementation project(path: ':common-test')

    coreLibraryDesugaring Android.tools.desugarJdkLibs
}

android {
    namespace "com.duckduckgo.authjwt.impl"
    anvil {
        generateDaggerFactories = true // default is false
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true
    }
}

