/*
 * Copyright (c) 2020 DuckDuckGo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.squareup.anvil'
    id 'kotlin-android-extensions'
}

apply from: "$rootProject.projectDir/gradle/android-library.gradle"

android {
    anvil {
        generateDaggerFactories = true // default is false
    }
}

ext {
    workManager = "2.5.0-beta01"
}

dependencies {
    anvil project(path: ':anvil-compiler')
    implementation project(path: ':anvil-annotations')
    implementation project(path: ':vpn-store')
    api project(path: ':vpn-api')
    implementation project(path: ':app-store')
    implementation project(path: ':di')
    implementation project(path: ':common')
    implementation project(path: ':common-ui')
    implementation project(path: ':statistics')
    implementation project(path: ':appbuildconfig-api')
    implementation project(path: ':feature-toggles-api')
    implementation project(path: ':privacy-config-api')

    implementation Kotlin.stdlib.jdk7

    implementation AndroidX.core.ktx

    implementation AndroidX.appCompat
    implementation Google.android.material
    implementation AndroidX.constraintLayout

    implementation AndroidX.lifecycle.viewModelKtx
    implementation AndroidX.lifecycle.runtimeKtx
    implementation AndroidX.lifecycle.commonJava8
    implementation AndroidX.lifecycle.liveDataKtx

    implementation "androidx.viewpager2:viewpager2:_"

    // Security crypto
    implementation AndroidX.security.crypto

    // Lottie
    implementation "com.airbnb.android:lottie:_"

    // Shimmer
    implementation "com.facebook.shimmer:shimmer:_"

    // Dagger
    compileOnly "org.glassfish:javax.annotation:10.0-b28"
    implementation Google.dagger

    implementation KotlinX.coroutines.core
    androidTestImplementation (KotlinX.coroutines.test) {
        // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
        // conflicts with mockito due to direct inclusion of byte buddy
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    testImplementation (KotlinX.coroutines.test) {
        // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
        // conflicts with mockito due to direct inclusion of byte buddy
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    implementation "com.jakewharton.threetenabp:threetenabp:_"
    testImplementation "org.threeten:threetenbp:_"

    implementation JakeWharton.timber

    implementation 'nl.dionsegijn:konfetti:1.2.5'

    // Room
    implementation AndroidX.room.runtime
    implementation AndroidX.room.rxJava2
    implementation AndroidX.room.ktx
    testImplementation AndroidX.room.testing
    androidTestImplementation AndroidX.room.testing

    // WorkManager
    implementation AndroidX.work.runtimeKtx
    implementation "androidx.work:work-multiprocess:$workManager"
    testImplementation AndroidX.work.testing
    androidTestImplementation AndroidX.work.testing
    implementation AndroidX.work.rxJava2

    implementation Square.retrofit2.converter.moshi
    implementation Square.okHttp3.okHttp

    implementation "com.github.bumptech.glide:glide:_"

    // Testing dependencies
    testImplementation "org.mockito.kotlin:mockito-kotlin:_"
    testImplementation Testing.junit4
    testImplementation AndroidX.test.ext.junit
    testImplementation AndroidX.archCore.testing
    testImplementation 'app.cash.turbine:turbine:_'
    testImplementation Testing.robolectric

    androidTestImplementation AndroidX.archCore.testing
    androidTestImplementation 'app.cash.turbine:turbine:_'

    androidTestImplementation AndroidX.test.runner
    androidTestImplementation AndroidX.test.rules

    androidTestImplementation "org.mockito:mockito-android:_"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:_"

    testImplementation project(path: ':common-test')
    androidTestImplementation project(path: ':common-test')
}

fulladleModuleConfig {
    maxTestShards.set(1)
}

tasks.register('androidTestsBuild') {
    dependsOn 'assembleDebugAndroidTest'
}