/*
 * Copyright (c) 2021 DuckDuckGo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

apply from: "$rootProject.projectDir/gradle/android-library.gradle"

android {
    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {

    implementation project(path: ':common')
    implementation project(path: ':vpn-api')
    implementation project(path: ':appbuildconfig-api')

    implementation Kotlin.stdlib.jdk7
    implementation AndroidX.core.ktx

    implementation "com.jakewharton.threetenabp:threetenabp:_"
    testImplementation "org.threeten:threetenbp:_"

    implementation JakeWharton.timber

    implementation Square.retrofit2.converter.moshi

    // Room
    implementation AndroidX.room.runtime
    implementation AndroidX.room.rxJava2
    implementation AndroidX.room.ktx
    // need access to Dagger annotations
    implementation Google.dagger
    kapt AndroidX.room.compiler
    testImplementation AndroidX.room.testing
    androidTestImplementation AndroidX.room.testing

    testImplementation "junit:junit:_"
    testImplementation project(path: ':common-test')
    testImplementation "org.mockito.kotlin:mockito-kotlin:_"

    androidTestImplementation project(path: ':common-test')
    androidTestImplementation AndroidX.test.runner
    androidTestImplementation AndroidX.test.rules
    androidTestUtil AndroidX.test.orchestrator
    androidTestImplementation "org.mockito:mockito-android:_"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:_"
    androidTestImplementation AndroidX.archCore.testing
}

fulladleModuleConfig {
    maxTestShards.set(1)
}

tasks.register('androidTestsBuild') {
    dependsOn 'assembleDebugAndroidTest'
}